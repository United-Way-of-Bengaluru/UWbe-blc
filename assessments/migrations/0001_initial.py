# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-08 11:00
from __future__ import unicode_literals

import assessments.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('answer_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('answer_grade', models.CharField(blank=True, max_length=30, null=True)),
                ('double_entry', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True, null=True)),
                ('last_modified_date', models.DateField(auto_now=True, null=True)),
                ('flexi_data', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField(default=datetime.date.today, max_length=20)),
                ('end_date', models.DateField(default=assessments.models.default_end_date, max_length=20)),
                ('query', models.CharField(blank=True, max_length=500, null=True)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('typ', models.IntegerField(choices=[(1, 'Institution'), (2, 'Student Group'), (3, 'Student')], default=3)),
                ('double_entry', models.BooleanField(default=True, verbose_name='Requires double entry')),
                ('flexi_assessment', models.BooleanField(default=False, verbose_name='Allows multiple sets of answer per assessment')),
                ('primary_field_name', models.CharField(blank=True, max_length=500, null=True)),
                ('primary_field_type', models.IntegerField(choices=[(0, 'Default'), (1, 'Integer'), (2, 'Char'), (3, 'Date'), (4, 'Lookup')], default=3, null=True)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Assessment_Class_Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment_Institution_Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment_Lookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('rank', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Assessment_StudentGroup_Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.DateField(default=datetime.date.today, max_length=20)),
                ('end_date', models.DateField(default=assessments.models.default_end_date, max_length=20)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
            options={
                'ordering': ['-start_date', '-end_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('question_type', models.IntegerField(choices=[(1, 'Marks'), (2, 'Grade')], default=1)),
                ('score_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('score_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.IntegerField()),
                ('double_entry', models.BooleanField(default=True)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserAssessmentPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access', models.BooleanField(default=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Assessment')),
            ],
        ),
    ]
