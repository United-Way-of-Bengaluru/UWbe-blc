# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-08 11:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import schools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Academic_Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('active', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Boundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Boundary_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundary_category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Boundary_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundary_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('uid', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(max_length=20)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='male', max_length=10)),
            ],
            options={
                'ordering': ['first_name', 'middle_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dise_code', models.CharField(blank=True, max_length=14, null=True)),
                ('name', models.CharField(max_length=300)),
                ('institution_gender', models.CharField(choices=[('boys', 'boys'), ('girls', 'girls'), ('co-ed', 'co-ed')], default='co-ed', max_length=10)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('boundary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Boundary')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Institution_address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=1000)),
                ('area', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('landmark', models.CharField(blank=True, help_text='Can be comma separated', max_length=1000, null=True)),
                ('instidentification', models.CharField(blank=True, help_text='Can be comma separated', max_length=1000, null=True)),
                ('instidentification2', models.CharField(blank=True, help_text='Can be comma separated', max_length=1000, null=True)),
                ('route_information', models.CharField(blank=True, help_text='Can be comma separated', max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category_type', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Institution_Management',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Moi_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Relations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[('Mother', 'Mother'), ('Father', 'Father'), ('Siblings', 'Siblings')], default='Mother', max_length=10)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Child')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('uid', models.CharField(blank=True, max_length=100, null=True)),
                ('doj', models.DateField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='female', max_length=10)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Institution')),
                ('mt', models.ForeignKey(default='kannada', on_delete=django.db.models.deletion.CASCADE, to='schools.Moi_Type')),
            ],
            options={
                'ordering': ['first_name', 'middle_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Staff_Qualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Staff_StudentGroupRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('academic', models.ForeignKey(default=schools.models.current_academic, on_delete=django.db.models.deletion.CASCADE, to='schools.Academic_Year')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_type', models.CharField(max_length=100)),
                ('category_type', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_student_id', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Child')),
            ],
            options={
                'ordering': ['child__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Student_StudentGroupRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('academic', models.ForeignKey(default=schools.models.current_academic, on_delete=django.db.models.deletion.CASCADE, to='schools.Academic_Year')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('section', models.CharField(blank=True, choices=[('', 'No Section'), (b'A', b'A'), (b'B', b'B'), (b'C', b'C'), (b'D', b'D'), (b'E', b'E'), (b'F', b'F'), (b'G', b'G'), (b'H', b'H'), (b'I', b'I'), (b'J', b'J'), (b'K', b'K'), (b'L', b'L'), (b'M', b'M'), (b'N', b'N'), (b'O', b'O'), (b'P', b'P'), (b'Q', b'Q'), (b'R', b'R'), (b'S', b'S'), (b'T', b'T'), (b'U', b'U'), (b'V', b'V'), (b'W', b'W'), (b'X', b'X'), (b'Y', b'Y'), (b'Z', b'Z')], default='', max_length=10)),
                ('active', models.IntegerField(blank=True, default=2, null=True)),
                ('group_type', models.CharField(choices=[('Class', 'Class'), ('Center', 'Center')], default='Class', max_length=10)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Institution')),
            ],
            options={
                'ordering': ['name', 'section'],
            },
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.SlugField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='student_studentgrouprelation',
            name='student_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.StudentGroup'),
        ),
        migrations.AddField(
            model_name='staff_studentgrouprelation',
            name='student_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.StudentGroup'),
        ),
        migrations.AddField(
            model_name='staff',
            name='qualification',
            field=models.ManyToManyField(blank=True, null=True, to='schools.Staff_Qualifications'),
        ),
        migrations.AddField(
            model_name='staff',
            name='staff_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='schools.Staff_Type'),
        ),
        migrations.AddField(
            model_name='institution',
            name='cat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Institution_Category'),
        ),
        migrations.AddField(
            model_name='institution',
            name='inst_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Institution_address'),
        ),
        migrations.AddField(
            model_name='institution',
            name='languages',
            field=models.ManyToManyField(to='schools.Moi_Type'),
        ),
        migrations.AddField(
            model_name='institution',
            name='mgmt',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Institution_Management'),
        ),
        migrations.AddField(
            model_name='child',
            name='mt',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Moi_Type'),
        ),
        migrations.AddField(
            model_name='boundary',
            name='boundary_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Boundary_Category'),
        ),
        migrations.AddField(
            model_name='boundary',
            name='boundary_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Boundary_Type'),
        ),
        migrations.AddField(
            model_name='boundary',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Boundary'),
        ),
        migrations.AlterUniqueTogether(
            name='studentgroup',
            unique_together=set([('institution', 'name', 'section')]),
        ),
        migrations.AlterUniqueTogether(
            name='student_studentgrouprelation',
            unique_together=set([('student', 'student_group', 'academic')]),
        ),
        migrations.AlterUniqueTogether(
            name='staff_studentgrouprelation',
            unique_together=set([('staff', 'student_group', 'academic')]),
        ),
    ]
